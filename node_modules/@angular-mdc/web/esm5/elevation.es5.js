/**
 * @license
 * Copyright (c) 2018 Dominic Carretto
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/trimox/angular-mdc-web/blob/master/LICENSE
 */
import { Directive, ElementRef, Input, NgModule } from '@angular/core';
import { toNumber } from '@angular-mdc/web/common';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var MdcElevation = /** @class */ (function () {
    function MdcElevation(elementRef) {
        this.elementRef = elementRef;
        this._mdcElevation = 0;
    }
    Object.defineProperty(MdcElevation.prototype, "mdcElevation", {
        get: /**
         * @return {?}
         */
        function () { return this._mdcElevation; },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._mdcElevation = toNumber(value);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} changes
     * @return {?}
     */
    MdcElevation.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        var /** @type {?} */ change = changes['mdcElevation'];
        if (change.currentValue < 0 || change.currentValue > 24) {
            throw new Error("Valid mdc-elevation values are 0 through 24");
        }
        if (!change.isFirstChange()) {
            this.elementRef.nativeElement.classList.remove("mdc-elevation--z" + change.previousValue);
        }
        this.elementRef.nativeElement.classList.add("mdc-elevation--z" + change.currentValue);
    };
    MdcElevation.decorators = [
        { type: Directive, args: [{
                    selector: '[mdcElevation]',
                    exportAs: 'mdcElevation'
                },] },
    ];
    /** @nocollapse */
    MdcElevation.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    MdcElevation.propDecorators = {
        mdcElevation: [{ type: Input }]
    };
    return MdcElevation;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var MdcElevationModule = /** @class */ (function () {
    function MdcElevationModule() {
    }
    MdcElevationModule.decorators = [
        { type: NgModule, args: [{
                    exports: [MdcElevation],
                    declarations: [MdcElevation],
                },] },
    ];
    return MdcElevationModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */

export { MdcElevationModule, MdcElevation };
