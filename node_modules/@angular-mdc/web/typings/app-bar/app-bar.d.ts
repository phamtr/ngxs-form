import { AfterContentInit, AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, OnDestroy, QueryList } from '@angular/core';
import { EventRegistry } from '@angular-mdc/web/common';
import { MdcAppBarActionItem, MdcAppBarNavigationIcon } from './app-bar.directives';
/** Event object emitted by MdcAppBar navigation icon selected. */
export declare class MdcAppBarNavSelected {
    source: MdcAppBar;
    constructor(source: MdcAppBar);
}
export declare class MdcAppBar implements AfterContentInit, AfterViewInit, OnDestroy {
    private _changeDetectorRef;
    elementRef: ElementRef;
    private _registry;
    /** Emits whenever the component is destroyed. */
    private _destroy;
    private _isFoundationInit;
    fixed: boolean;
    protected _fixed: boolean;
    prominent: boolean;
    protected _prominent: boolean;
    short: boolean;
    protected _short: boolean;
    shortCollapsed: boolean;
    protected _shortCollapsed: boolean;
    dense: boolean;
    protected _dense: boolean;
    fixedAdjustElement: HTMLElement;
    protected _fixedAdjustElement: HTMLElement;
    /** Event emitted when the navigation icon is selected. */
    navigationSelected: EventEmitter<MdcAppBarNavSelected>;
    isHostClass: boolean;
    readonly classProminent: string;
    readonly classDense: string;
    readonly classShort: string;
    readonly classFixed: string;
    navigationIcon: MdcAppBarNavigationIcon;
    actions: QueryList<MdcAppBarActionItem>;
    private _mdcAdapter;
    private _foundation;
    constructor(_changeDetectorRef: ChangeDetectorRef, elementRef: ElementRef, _registry: EventRegistry);
    ngAfterContentInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    setFixedAdjustElement(element: HTMLElement): void;
    /** Sets the top app bar to fixed or not. */
    setFixed(fixed: boolean, isUserInput?: boolean): void;
    /** Sets the top app bar to prominent or not. */
    setProminent(prominent: boolean, isUserInput?: boolean): void;
    /** Sets the top app bar to dense variant. */
    setDense(dense: boolean, isUserInput?: boolean): void;
    /** Sets the top app bar to short or not. */
    setShort(short: boolean, isUserInput?: boolean): void;
    /** Sets the top app bar to short-collapsed or not. */
    setShortCollapsed(shortCollapsed: boolean, isUserInput?: boolean): void;
    initializeFoundation(): void;
    private _resetFixedShort();
    private _initAppBar();
    private _getScrollOffset();
    /** Retrieves the DOM element of the component host. */
    private _getHostElement();
}
