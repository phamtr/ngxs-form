import { AfterContentInit, ElementRef, EventEmitter, OnDestroy, QueryList } from '@angular/core';
import { EventRegistry } from '@angular-mdc/web/common';
import { MdcDialogBody, MdcDialogButton, MdcDialogSurface } from './dialog-directives';
import { MdcDialogConfig } from './dialog-config';
import { MdcDialogRef } from './dialog-ref';
export declare class MdcDialogComponent implements AfterContentInit, OnDestroy {
    elementRef: ElementRef;
    private _registry;
    dialogRef: MdcDialogRef<any>;
    private _focusTrap;
    config: MdcDialogConfig;
    clickOutsideToClose: boolean;
    escapeToClose: boolean;
    backdrop: boolean;
    isHostClass: boolean;
    alertDialog: string;
    ariaHidden: string;
    tabIndex: number;
    /** Event emitted when the dialog is closed. */
    readonly closed: EventEmitter<void>;
    readonly _accept: EventEmitter<string>;
    readonly _cancel: EventEmitter<string>;
    _surface: MdcDialogSurface;
    _dialogBody: MdcDialogBody;
    _actions: QueryList<MdcDialogButton>;
    private _mdcAdapter;
    private _foundation;
    constructor(elementRef: ElementRef, _registry: EventRegistry, dialogRef: MdcDialogRef<any>);
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    initDeclarativeConfig(): void;
    show(): void;
    private _closeDialogRef(result?);
    close(): void;
    isOpen(): boolean;
    accept(shouldNotify?: boolean): void;
    cancel(shouldNotify?: boolean): void;
    private _onKeyDown(event);
    /** Retrieves the DOM element of the component host. */
    private _getHostElement();
}
