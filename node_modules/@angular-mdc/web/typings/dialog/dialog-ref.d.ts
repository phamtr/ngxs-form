import { Observable } from 'rxjs';
import { MdcDialogContainer } from './dialog-container';
import { MdcDialogConfig } from './dialog-config';
/**
 * Reference to a dialog dispatched from the MdcDialog service.
 */
export declare class MdcDialogRef<T, R = any> {
    protected _containerInstance: MdcDialogContainer;
    readonly id: string;
    /** The instance of the component in the dialog. */
    componentInstance: T;
    /** Result to be passed to afterClosed. */
    private _result;
    constructor(_containerInstance: MdcDialogContainer, id?: string);
    /**
     * Close the dialog.
     * @param dialogResult Optional result to return to the dialog opener.
     */
    close(dialogResult?: R): void;
    readonly config: MdcDialogConfig;
    readonly data: any;
    /** Gets an observable that is notified when the dialog is finished closing. */
    afterClosed(): Observable<R | undefined>;
}
