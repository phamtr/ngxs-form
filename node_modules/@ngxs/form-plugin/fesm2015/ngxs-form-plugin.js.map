{
  "version": 3,
  "file": "ngxs-form-plugin.js",
  "sources": [
    "ng://@ngxs/form-plugin/packages/form-plugin/src/form.module.ts",
    "ng://@ngxs/form-plugin/packages/form-plugin/src/directive.ts",
    "ng://@ngxs/form-plugin/packages/form-plugin/src/form.plugin.ts",
    "ng://@ngxs/form-plugin/packages/form-plugin/src/actions.ts"
  ],
  "sourcesContent": [
    "import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { NGXS_PLUGINS } from '@ngxs/store';\nimport { NgxsFormPlugin } from './form.plugin';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormDirective } from './directive';\n\n@NgModule({\n  imports: [ReactiveFormsModule],\n  declarations: [FormDirective],\n  exports: [FormDirective]\n})\nexport class NgxsFormPluginModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgxsFormPluginModule,\n      providers: [\n        {\n          provide: NGXS_PLUGINS,\n          useClass: NgxsFormPlugin,\n          multi: true\n        }\n      ]\n    };\n  }\n}\n",
    "import { Directive, Input, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\nimport { FormGroupDirective } from '@angular/forms';\nimport { Store, getValue } from '@ngxs/store';\nimport { Subject } from 'rxjs';\nimport { takeUntil, debounceTime, first } from 'rxjs/operators';\nimport { UpdateFormStatus, UpdateFormValue, UpdateFormDirty, UpdateFormErrors, UpdateForm } from './actions';\n\n@Directive({ selector: '[ngxsForm]' })\nexport class FormDirective implements OnInit, OnDestroy {\n  @Input('ngxsForm') path: string;\n  @Input('ngxsFormDebounce') debounce = 100;\n  @Input('ngxsFormClearOnDestroy') clearDestroy: boolean;\n\n  private _destroy$ = new Subject<null>();\n  private _updating = false;\n\n  constructor(private _store: Store, private _formGroupDirective: FormGroupDirective, private _cd: ChangeDetectorRef) {}\n\n  ngOnInit() {\n    this._store\n      .select(state => getValue(state, `${this.path}.model`))\n      .pipe(takeUntil(this._destroy$))\n      .subscribe(model => {\n        if (!this._updating && model) {\n          this._formGroupDirective.form.patchValue(model);\n          this._cd.markForCheck();\n        }\n      });\n\n    // On first state change, sync form model, status and dirty with state\n    this._store\n      .select(state => getValue(state, `${this.path}`))\n      .pipe(takeUntil(this._destroy$), first())\n      .subscribe(state => {\n        this._store.dispatch([\n          new UpdateFormValue({\n            path: this.path,\n            value: this._formGroupDirective.form.getRawValue()\n          }),\n          new UpdateFormStatus({\n            path: this.path,\n            status: this._formGroupDirective.form.status\n          }),\n          new UpdateFormDirty({\n            path: this.path,\n            dirty: this._formGroupDirective.form.dirty\n          })\n        ]);\n      });\n\n    this._store\n      .select(state => getValue(state, `${this.path}.dirty`))\n      .pipe(takeUntil(this._destroy$))\n      .subscribe(dirty => {\n        if (this._formGroupDirective.form.dirty !== dirty) {\n          if (dirty === true) {\n            this._formGroupDirective.form.markAsDirty();\n            this._cd.markForCheck();\n          } else if (dirty === false) {\n            this._formGroupDirective.form.markAsPristine();\n            this._cd.markForCheck();\n          }\n        }\n      });\n\n    this._store\n      .select(state => getValue(state, `${this.path}.disabled`))\n      .pipe(takeUntil(this._destroy$))\n      .subscribe(disabled => {\n        if (this._formGroupDirective.form.disabled !== disabled) {\n          if (disabled === true) {\n            this._formGroupDirective.form.disable();\n            this._cd.markForCheck();\n          } else if (disabled === false) {\n            this._formGroupDirective.form.enable();\n            this._cd.markForCheck();\n          }\n        }\n      });\n\n    this._formGroupDirective.valueChanges.pipe(debounceTime(this.debounce), takeUntil(this._destroy$)).subscribe(() => {\n      const value = this._formGroupDirective.control.getRawValue();\n      this._updating = true;\n      this._store\n        .dispatch([\n          new UpdateFormValue({\n            path: this.path,\n            value\n          }),\n          new UpdateFormDirty({\n            path: this.path,\n            dirty: this._formGroupDirective.dirty\n          }),\n          new UpdateFormErrors({\n            path: this.path,\n            errors: this._formGroupDirective.errors\n          })\n        ])\n        .subscribe({\n          error: () => (this._updating = false),\n          complete: () => (this._updating = false)\n        });\n    });\n\n    this._formGroupDirective.statusChanges\n      .pipe(debounceTime(this.debounce), takeUntil(this._destroy$))\n      .subscribe((status: string) => {\n        this._store.dispatch(\n          new UpdateFormStatus({\n            status,\n            path: this.path\n          })\n        );\n      });\n  }\n\n  ngOnDestroy() {\n    this._destroy$.next();\n    this._destroy$.complete();\n\n    if (this.clearDestroy) {\n      this._store.dispatch(\n        new UpdateForm({\n          path: this.path,\n          value: null,\n          dirty: null,\n          status: null,\n          errors: null\n        })\n      );\n    }\n  }\n}\n",
    "import { Injectable } from '@angular/core';\nimport { NgxsPlugin, setValue, getActionTypeFromInstance } from '@ngxs/store';\nimport { UpdateForm, UpdateFormDirty, UpdateFormErrors,\n  UpdateFormStatus, UpdateFormValue, SetFormDirty, SetFormDisabled,\n  SetFormEnabled, SetFormPristine } from './actions';\n\n@Injectable()\nexport class NgxsFormPlugin implements NgxsPlugin {\n  constructor() {}\n\n  handle(state, event, next) {\n    const type = getActionTypeFromInstance(event);\n\n    let nextState = state;\n\n    if (type === UpdateFormValue.type || type === UpdateForm.type) {\n      nextState = setValue(nextState, `${event.payload.path}.model`, {\n        ...event.payload.value\n      });\n    }\n\n    if (type === UpdateFormStatus.type || type === UpdateForm.type) {\n      nextState = setValue(nextState, `${event.payload.path}.status`, event.payload.status);\n    }\n\n    if (type === UpdateFormErrors.type || type === UpdateForm.type) {\n      nextState = setValue(nextState, `${event.payload.path}.errors`, {\n        ...event.payload.errors\n      });\n    }\n\n    if (type === UpdateFormDirty.type || type === UpdateForm.type) {\n      nextState = setValue(nextState, `${event.payload.path}.dirty`, event.payload.dirty);\n    }\n\n    if (type === SetFormDirty.type) {\n      nextState = setValue(nextState, `${event.payload}.dirty`, true);\n    }\n\n    if (type === SetFormPristine.type) {\n      nextState = setValue(nextState, `${event.payload}.dirty`, false);\n    }\n\n    if (type === SetFormDisabled.type) {\n      nextState = setValue(nextState, `${event.payload}.disabled`, true);\n    }\n\n    if (type === SetFormEnabled.type) {\n      nextState = setValue(nextState, `${event.payload}.disabled`, false);\n    }\n\n    return next(nextState, event);\n  }\n}\n",
    "export class UpdateFormStatus {\n  static readonly type = '[Forms] Update Form Status';\n  constructor(public payload: { status: string | null; path: string }) {}\n}\n\nexport class UpdateFormValue {\n  static readonly type = '[Forms] Update Form Value';\n  constructor(public payload: { value: any; path: string }) {}\n}\n\nexport class UpdateForm {\n  static readonly type = '[Forms] Update Form';\n  constructor(\n    public payload: {\n      value: any;\n      errors: { [k: string]: string } | null;\n      dirty: boolean | null;\n      status: string | null;\n      path: string;\n    }\n  ) {}\n}\n\nexport class UpdateFormDirty {\n  static readonly type = '[Forms] Update Form Dirty';\n  constructor(public payload: { dirty: boolean | null; path: string }) {}\n}\n\nexport class SetFormDirty {\n  static readonly type = '[Forms] Set Form Dirty';\n  constructor(public payload: string) {}\n}\n\nexport class SetFormPristine {\n  static readonly type = '[Forms] Set Form Pristine';\n  constructor(public payload: string) {}\n}\n\nexport class UpdateFormErrors {\n  static readonly type = '[Forms] Update Form Errors';\n  constructor(public payload: { errors: { [k: string]: string } | null; path: string }) {}\n}\n\nexport class SetFormDisabled {\n  static readonly type = '[Forms] Set Form Disabled';\n  constructor(public payload: string) {}\n}\n\nexport class SetFormEnabled {\n  static readonly type = '[Forms] Set Form Enabled';\n  constructor(public payload: string) {}\n}\n"
  ],
  "names": [],
  "mappings": ";;;;;;AGAA,MAAA,gBAAA,CAAA;IAEE,WAAF,CAAqB,OAAgD,EAArE;QAAqB,IAArB,CAAA,OAA4B,GAAP,OAAO,CAAyC;KAAI;;AADzE,gBAAA,CAAA,IAAA,GAAyB,4BAA4B,CAArD;AAIA,AAAA,MAAA,eAAA,CAAA;IAEE,WAAF,CAAqB,OAAqC,EAA1D;QAAqB,IAArB,CAAA,OAA4B,GAAP,OAAO,CAA8B;KAAI;;AAD9D,eAAA,CAAA,IAAA,GAAyB,2BAA2B,CAApD;AAIA,AAAA,MAAA,UAAA,CAAA;IAEE,WAAF,CACW,OAMN,EAPL;QACW,IAAX,CAAA,OAAkB,GAAP,OAAO,CAMb;KACC;;AATN,UAAA,CAAA,IAAA,GAAyB,qBAAqB,CAA9C;AAYA,AAAA,MAAA,eAAA,CAAA;IAEE,WAAF,CAAqB,OAAgD,EAArE;QAAqB,IAArB,CAAA,OAA4B,GAAP,OAAO,CAAyC;KAAI;;AADzE,eAAA,CAAA,IAAA,GAAyB,2BAA2B,CAApD;AAIA,AAAA,MAAA,YAAA,CAAA;IAEE,WAAF,CAAqB,OAAe,EAApC;QAAqB,IAArB,CAAA,OAA4B,GAAP,OAAO,CAAQ;KAAI;;AADxC,YAAA,CAAA,IAAA,GAAyB,wBAAwB,CAAjD;AAIA,AAAA,MAAA,eAAA,CAAA;IAEE,WAAF,CAAqB,OAAe,EAApC;QAAqB,IAArB,CAAA,OAA4B,GAAP,OAAO,CAAQ;KAAI;;AADxC,eAAA,CAAA,IAAA,GAAyB,2BAA2B,CAApD;AAIA,AAAA,MAAA,gBAAA,CAAA;IAEE,WAAF,CAAqB,OAAiE,EAAtF;QAAqB,IAArB,CAAA,OAA4B,GAAP,OAAO,CAA0D;KAAI;;AAD1F,gBAAA,CAAA,IAAA,GAAyB,4BAA4B,CAArD;AAIA,AAAA,MAAA,eAAA,CAAA;IAEE,WAAF,CAAqB,OAAe,EAApC;QAAqB,IAArB,CAAA,OAA4B,GAAP,OAAO,CAAQ;KAAI;;AADxC,eAAA,CAAA,IAAA,GAAyB,2BAA2B,CAApD;AAIA,AAAA,MAAA,cAAA,CAAA;IAEE,WAAF,CAAqB,OAAe,EAApC;QAAqB,IAArB,CAAA,OAA4B,GAAP,OAAO,CAAQ;KAAI;;AADxC,cAAA,CAAA,IAAA,GAAyB,0BAA0B,CAAnD;;AD1CA,MAAA,cAAA,CAAA;IACE,WAAF,GAAA,GAAkB;IAEhB,MAAM,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAA3B;QACI,MAAM,IAAI,GAAG,yBAAyB,CAAC,KAAK,CAAC,CAAC;QAE9C,IAAI,SAAS,GAAG,KAAK,CAAC;QAEtB,IAAI,IAAI,KAAK,eAAe,CAAC,IAAI,IAAI,IAAI,KAAK,UAAU,CAAC,IAAI,EAAE;YAC7D,SAAS,GAAG,QAAQ,CAAC,SAAS,EAAE,CAAtC,EAAyC,KAAK,CAAC,OAAO,CAAC,IAAI,CAA3D,MAAA,CAAmE,EAAnE,MAAA,CAAA,MAAA,CAAA,EAAA,EACW,KAAK,CAAC,OAAO,CAAC,KAAK,CAD9B,CAEQ,CAAC;SACJ;QAED,IAAI,IAAI,KAAK,gBAAgB,CAAC,IAAI,IAAI,IAAI,KAAK,UAAU,CAAC,IAAI,EAAE;YAC9D,SAAS,GAAG,QAAQ,CAAC,SAAS,EAAE,CAAtC,EAAyC,KAAK,CAAC,OAAO,CAAC,IAAI,CAA3D,OAAA,CAAoE,EAAE,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;SACvF;QAED,IAAI,IAAI,KAAK,gBAAgB,CAAC,IAAI,IAAI,IAAI,KAAK,UAAU,CAAC,IAAI,EAAE;YAC9D,SAAS,GAAG,QAAQ,CAAC,SAAS,EAAE,CAAtC,EAAyC,KAAK,CAAC,OAAO,CAAC,IAAI,CAA3D,OAAA,CAAoE,EAApE,MAAA,CAAA,MAAA,CAAA,EAAA,EACW,KAAK,CAAC,OAAO,CAAC,MAAM,CAD/B,CAEQ,CAAC;SACJ;QAED,IAAI,IAAI,KAAK,eAAe,CAAC,IAAI,IAAI,IAAI,KAAK,UAAU,CAAC,IAAI,EAAE;YAC7D,SAAS,GAAG,QAAQ,CAAC,SAAS,EAAE,CAAtC,EAAyC,KAAK,CAAC,OAAO,CAAC,IAAI,CAA3D,MAAA,CAAmE,EAAE,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SACrF;QAED,IAAI,IAAI,KAAK,YAAY,CAAC,IAAI,EAAE;YAC9B,SAAS,GAAG,QAAQ,CAAC,SAAS,EAAE,CAAtC,EAAyC,KAAK,CAAC,OAAO,CAAtD,MAAA,CAA8D,EAAE,IAAI,CAAC,CAAC;SACjE;QAED,IAAI,IAAI,KAAK,eAAe,CAAC,IAAI,EAAE;YACjC,SAAS,GAAG,QAAQ,CAAC,SAAS,EAAE,CAAtC,EAAyC,KAAK,CAAC,OAAO,CAAtD,MAAA,CAA8D,EAAE,KAAK,CAAC,CAAC;SAClE;QAED,IAAI,IAAI,KAAK,eAAe,CAAC,IAAI,EAAE;YACjC,SAAS,GAAG,QAAQ,CAAC,SAAS,EAAE,CAAtC,EAAyC,KAAK,CAAC,OAAO,CAAtD,SAAA,CAAiE,EAAE,IAAI,CAAC,CAAC;SACpE;QAED,IAAI,IAAI,KAAK,cAAc,CAAC,IAAI,EAAE;YAChC,SAAS,GAAG,QAAQ,CAAC,SAAS,EAAE,CAAtC,EAAyC,KAAK,CAAC,OAAO,CAAtD,SAAA,CAAiE,EAAE,KAAK,CAAC,CAAC;SACrE;QAED,OAAO,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;KAC/B;;;IA9CH,EAAA,IAAA,EAAC,UAAU,EAAX;;;;;ADEA,MAAA,aAAA,CAAA;IAQE,WAAF,CAAsB,MAAa,EAAU,mBAAuC,EAAU,GAAsB,EAApH;QAAsB,IAAtB,CAAA,MAA4B,GAAN,MAAM,CAAO;QAAU,IAA7C,CAAA,mBAAgE,GAAnB,mBAAmB,CAAoB;QAAU,IAA9F,CAAA,GAAiG,GAAH,GAAG,CAAmB;QANpH,IAAA,CAAA,QAAA,GAAwC,GAAG,CAA3C;QAGA,IAAA,CAAA,SAAA,GAAsB,IAAI,OAAO,EAAQ,CAAzC;QACA,IAAA,CAAA,SAAA,GAAsB,KAAK,CAA3B;KAEwH;IAEtH,QAAQ,GAAV;QACI,IAAI,CAAC,MAAM;aACR,MAAM,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,EAAE,CAAvC,EAA0C,IAAI,CAAC,IAAI,CAAnD,MAAA,CAA2D,CAAC,CAAC;aACtD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aAC/B,SAAS,CAAC,KAAK,IAAtB;YACQ,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,KAAK,EAAE;gBAC5B,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAChD,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;aACzB;SACF,CAAC,CAAC;;QAGL,IAAI,CAAC,MAAM;aACR,MAAM,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,EAAE,CAAvC,EAA0C,IAAI,CAAC,IAAI,CAAnD,CAAqD,CAAC,CAAC;aAChD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,CAAC;aACxC,SAAS,CAAC,KAAK,IAAtB;YACQ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;gBACnB,IAAI,eAAe,CAAC;oBAClB,IAAI,EAAE,IAAI,CAAC,IAAI;oBACf,KAAK,EAAE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,EAAE;iBACnD,CAAC;gBACF,IAAI,gBAAgB,CAAC;oBACnB,IAAI,EAAE,IAAI,CAAC,IAAI;oBACf,MAAM,EAAE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM;iBAC7C,CAAC;gBACF,IAAI,eAAe,CAAC;oBAClB,IAAI,EAAE,IAAI,CAAC,IAAI;oBACf,KAAK,EAAE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK;iBAC3C,CAAC;aACH,CAAC,CAAC;SACJ,CAAC,CAAC;QAEL,IAAI,CAAC,MAAM;aACR,MAAM,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,EAAE,CAAvC,EAA0C,IAAI,CAAC,IAAI,CAAnD,MAAA,CAA2D,CAAC,CAAC;aACtD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aAC/B,SAAS,CAAC,KAAK,IAAtB;YACQ,IAAI,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,KAAK,KAAK,EAAE;gBACjD,IAAI,KAAK,KAAK,IAAI,EAAE;oBAClB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;oBAC5C,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;iBACzB;qBAAM,IAAI,KAAK,KAAK,KAAK,EAAE;oBAC1B,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;oBAC/C,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;iBACzB;aACF;SACF,CAAC,CAAC;QAEL,IAAI,CAAC,MAAM;aACR,MAAM,CAAC,KAAK,IAAI,QAAQ,CAAC,KAAK,EAAE,CAAvC,EAA0C,IAAI,CAAC,IAAI,CAAnD,SAAA,CAA8D,CAAC,CAAC;aACzD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aAC/B,SAAS,CAAC,QAAQ,IAAzB;YACQ,IAAI,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,KAAK,QAAQ,EAAE;gBACvD,IAAI,QAAQ,KAAK,IAAI,EAAE;oBACrB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;oBACxC,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;iBACzB;qBAAM,IAAI,QAAQ,KAAK,KAAK,EAAE;oBAC7B,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;oBACvC,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;iBACzB;aACF;SACF,CAAC,CAAC;QAEL,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,MAAjH;YACM,MAAM,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;YAC7D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,MAAM;iBACR,QAAQ,CAAC;gBACR,IAAI,eAAe,CAAC;oBAClB,IAAI,EAAE,IAAI,CAAC,IAAI;oBACf,KAAK;iBACN,CAAC;gBACF,IAAI,eAAe,CAAC;oBAClB,IAAI,EAAE,IAAI,CAAC,IAAI;oBACf,KAAK,EAAE,IAAI,CAAC,mBAAmB,CAAC,KAAK;iBACtC,CAAC;gBACF,IAAI,gBAAgB,CAAC;oBACnB,IAAI,EAAE,IAAI,CAAC,IAAI;oBACf,MAAM,EAAE,IAAI,CAAC,mBAAmB,CAAC,MAAM;iBACxC,CAAC;aACH,CAAC;iBACD,SAAS,CAAC;gBACT,KAAK,EAAE,OAAO,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACrC,QAAQ,EAAE,OAAO,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;aACzC,CAAC,CAAC;SACN,CAAC,CAAC;QAEH,IAAI,CAAC,mBAAmB,CAAC,aAAa;aACnC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aAC5D,SAAS,CAAC,CAAC,MAAc,KAAhC;YACQ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAClB,IAAI,gBAAgB,CAAC;gBACnB,MAAM;gBACN,IAAI,EAAE,IAAI,CAAC,IAAI;aAChB,CAAC,CACH,CAAC;SACH,CAAC,CAAC;KACN;IAED,WAAW,GAAb;QACI,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;QAE1B,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAClB,IAAI,UAAU,CAAC;gBACb,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,KAAK,EAAE,IAAI;gBACX,KAAK,EAAE,IAAI;gBACX,MAAM,EAAE,IAAI;gBACZ,MAAM,EAAE,IAAI;aACb,CAAC,CACH,CAAC;SACH;KACF;;;IA5HH,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW,EAAE,QAAQ,EAAE,YAAY,EAAE,EAArC,EAAA;;;;IALA,EAAA,IAAA,EAAS,KAAK,GAAd;IADA,EAAA,IAAA,EAAS,kBAAkB,GAA3B;IADA,EAAA,IAAA,EAA8C,iBAAiB,GAA/D;;;IASA,MAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,IAAA,EAAA,CAAS,UAAU,EAAnB,EAAA,EAAA;IACA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,IAAA,EAAA,CAAS,kBAAkB,EAA3B,EAAA,EAAA;IACA,cAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,IAAA,EAAA,CAAS,wBAAwB,EAAjC,EAAA,EAAA;;;ADAA,MAAA,oBAAA,CAAA;IACE,OAAO,OAAO,GAAhB;QACI,OAAO;YACL,QAAQ,EAAE,oBAAoB;YAC9B,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,YAAY;oBACrB,QAAQ,EAAE,cAAc;oBACxB,KAAK,EAAE,IAAI;iBACZ;aACF;SACF,CAAC;KACH;;;IAjBH,EAAA,IAAA,EAAC,QAAQ,EAAT,IAAA,EAAA,CAAU;gBACR,OAAO,EAAE,CAAC,mBAAmB,CAAC;gBAC9B,YAAY,EAAE,CAAC,aAAa,CAAC;gBAC7B,OAAO,EAAE,CAAC,aAAa,CAAC;aACzB,EAAD,EAAA;;;;;;;;;"
}
